[build-system]
requires = ["setuptools>=52", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "{{ cookiecutter.project_name }}"
description = "{{ cookiecutter.package_description }}"
authors = [
  { name = "{{ cookiecutter.author_name }}", email = "{{ cookiecutter.author_email }}" },
]
maintainers = [
  { name = "{{ cookiecutter.author_name }}", email = "{{ cookiecutter.author_email }}" },
]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.8"
dependencies = []
keywords = []
classifiers = [
  "Development Status :: 1 - Dev",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3 :: Only",
]
dynamic = ["version"]

[project.urls]
Homepage = "{{ coookiecutter.package_url }}"
Source = "{{ cookiecutter.git_repository }}"

[tool.setuptools_scm]
write_to = "src/{{ cookiecutter.package_name }}/_version.py"
root = "."
version_scheme = "guess-next-dev"
local_scheme = "no-local-version"

[tool.setuptools]
platforms = ["Windows", "macOS", "Linux"]

[tool.setuptools.packages.find]
where = ["src"]

[project.optional-dependencies]
dev = ["black", "pylint", "bandit"]
test = ["tox", "pytest"]
docs = [
  "sphinx",
  "sphinx-autoapi",
  "myst-parser",
  "furo @ git+https://github.com/gravures/furo.git@gravures",
]

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py38,py39,py310,py311

[testenv]
deps = pytest
commands = py.test {{ cookiecutter.package_name }}
"""

[tool.ruff]
target-version = "py38"
line-length = 99
select = [
  'A',  # flake8-builtins
  'B',  # flake8-bugbear
  'C4', # flake8-comprehensions
  'C9', # mccabe
  'D',  # pydocstyle
  'E',  # pycodestyle
  'F',  # pyflakes
  'W',  # pycodestyle
  'N',  # pep8-naming
  'UP', # pyupgrade
  # 'ANN',   # flake8-annotations
  'ASYNC', # flake8-asyncpg
  'S',     # flake8-bandit
  'FBT',   # flake8-bolean-trap
  'COM',   # flake8-commas
  'CPY',   # flake8-copyright
  'PYI',   # flake8-pyi
  'RSE',   # flake8-raise
  'RET',   # flake8-return
  'TCH',   # flake8-todo
  'PTH',   # flake8-use-pathlib
  'PL',    # pylint
  'TRY',   # tryceratops
  'RUF',   # ruff
]
ignore = ['TRY003', 'D105', 'D107', 'PLR2004']
exclude = ['docs/conf.py']

[tool.ruff.mccabe]
max-complexity = 12

[tool.black]
line-length = 999
target-version = ["py38", "py39", "py310", "py311"]
include = "\\.py[iw]?$"
